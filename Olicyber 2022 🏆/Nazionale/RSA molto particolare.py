from Crypto.Util.number import *

def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y
    
p = 11357391376610007521286801632882163834825204016943818000939657592129687681410201801968002762858945885968318221725942059851835713890864746112047545927841502753526981795111110205402324592381517503405665904691471566011250013822318810581738982949196841145542159897635217520434975570401806006305343161268900450395650413033287029880545013958723836077546050512467057540845080052448896083813289513944095471735373191784325591123557041582647428068191131103321733434764095992208006289289873002608856599094452533909889501116248448652487004152629235944055472781483156744351062896701167782733249953960022028225165654137930352831039
q = 2
n = p * q
e = 65537
phi = (p-1)*(q-1)
f = bytes_to_long(bytes.fromhex("388244a02eb9e2c2c06bcbc932422e0d181156ea4e08710b6987aad4f16e55e137b45ed9776b6baaffad78006db8131526e0c941b759e4493f38a697caba8d1a8e81300baa86d7b0a63b542e661b3bda502f6c09bf5636dbf567c21a3f3b10dcf9054ed4c485755df1d6d2f4a05814281eea0f4cb43d4e623a92c62473e2a2315e29e46ac31ff37e2a8feddba8f6d11a31aa7941d7edef3087582e43f2faa83a0555a598c1248568d8a268d993c8b47e8cc7c76d9ce95df1933d6b32fa331c1fcb154ebd65681945c958d8f0f10c015a478cc03fa4e31c1b5a4c55dc3da7b9c9ee5e0f24481b81a75af306dc9b766913c234f03673e9dc1cf35eb7f338d12e1f"))
gcd, d, b = egcd(e, phi)
m = pow(f, d, n)
print(long_to_bytes(m).decode(), end="")