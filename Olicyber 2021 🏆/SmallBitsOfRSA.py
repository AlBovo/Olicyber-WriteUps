#!/usr/bin/env python3
from Crypto.Util.number import long_to_bytes, isPrime
import random, os

n = 32317006071311007300714876688669951960444102669715484032130345427524655138867890910231815158340075124449160771204283641281724391624155744134891299920569778021546200566154762844737460306656401306717995042112975678567115629090803517462121258655469583240022037353048521499240827843155027799956552786959990585649107658811064260488232738134166283505443407341105321057437064785365817773808838948334147486828634905280811812093005565958364262499813458296923764425988731231141215242724174842455026328368850871890939653154468015125635908962988588710751338641786413095107838684263878858986666197310881722534070178524799048876033
ct = 31469377515162416691937486388338904542391170029557470417191010059118166159973852280781681215886744020437544389486747794993719387196211451928074096624039829297844200827040451687798829988979874696927095434787957785811028717288603998622162415714934569904339518703767021117385594485878500603345465423689931222527166269469594918992875696170151104638753829337933139136133381038573593209571963250319298406843780788832370142118230372199145031446941989147873429923880735856152181695694639957103929228029967979558575192131192323945877383086247575773271999263154643957529332148722775194663765250864924076582924094191580148533021
e = 65537
''' brute force'''
def gen_prime(nbits):
    while True:
        x = random.randint(1, nbits-1)
        y = random.randint(1, nbits-1)
        p = 1 + 2**x + 2**y + 2**nbits
        if isPrime(p):
            return p

def keygen(nbits):
    p = 3
    while n % p != 0:
        p = gen_prime(nbits//2)        
    print(p, n//p)
    return p, n//p
p, q = keygen(2048)
phi = (p-1)*(q-1)
d = pow(e, -1, phi)
m = pow(ct, d, n)
print(long_to_bytes(m))
